# Deployment definition for the sample-api application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-api
  namespace: irwinrex
spec:
  replicas: 1  # Number of desired replicas
  selector:
    matchLabels:
      app: sample  # Label selector for the pods
  template:
    metadata:
      labels:
        app: sample  # Labels for the pods
    spec:
      securityContext:
        runAsUser: 1000  # User ID to run the application
        runAsGroup: 1000  # Group ID to run the application
        fsGroup: 2000  # Group ID for file system permissions
      initContainers:
      - name: setup-permissions
        image: busybox
        command: ["sh", "-c", "chown 1000:1000 -R /mnt/efs && chmod 755 -R /mnt/efs"]
        volumeMounts:
          - name: api-storage
            mountPath: /mnt/efs
        securityContext:
          runAsUser: 0
          privileged: true
      containers:
      - name: sample-api
        image: dockerrexxzz/sampleapi:latest  # Replace with your Docker image name and tag
        imagePullPolicy: Always
        envFrom:
          - secretRef:
              name: secret-env  # Environment variables from Secret
        resources:
          limits:
            memory: "256Mi"  # Adjust the memory limit as per your requirements
            cpu: "256m"       # Adjust the CPU limit as per your requirements
          requests:
            memory: "125Mi"
            cpu: "100m"
        ports:
          - name: sample-pod-port
            containerPort: 7000  # Application port
        readinessProbe:
          httpGet:
            path: /healthcheck  # Health check path
            port: 7000
          initialDelaySeconds: 10  # Delay before the first probe
          periodSeconds: 5  # Frequency of probe
        livenessProbe:
          httpGet:
            path: /healthcheck  # Health check path
            port: 7000
          initialDelaySeconds: 15  # Delay before the first probe
        volumeMounts:
          - name: api-storage
            mountPath: /mnt/efs  # Mount the EFS volume inside the container
          - name: secret-json
            mountPath: /app/config/secrets.json  # Mount the ConfigMap file
            subPath: secrets.json  # Use subPath to map a specific file
      volumes:
        - name: api-storage
          persistentVolumeClaim:
            claimName: api-pvc  # Use the PVC for storage
        - name: secret-json
          configMap:
            name: secrets-json  # Use the ConfigMap for secrets.json